[{"C:\\Users\\Andrianiaina\\Dossier_Projet\\projet_haum\\src\\index.jsx":"1","C:\\Users\\Andrianiaina\\Dossier_Projet\\projet_haum\\src\\serviceWorker.js":"2","C:\\Users\\Andrianiaina\\Dossier_Projet\\projet_haum\\src\\App.jsx":"3","C:\\Users\\Andrianiaina\\Dossier_Projet\\projet_haum\\src\\DialogContext.js":"4","C:\\Users\\Andrianiaina\\Dossier_Projet\\projet_haum\\src\\components\\Dialog.jsx":"5","C:\\Users\\Andrianiaina\\Dossier_Projet\\projet_haum\\src\\components\\ActionButton.jsx":"6","C:\\Users\\Andrianiaina\\Dossier_Projet\\projet_haum\\src\\components\\animation.js":"7","C:\\Users\\Andrianiaina\\Dossier_Projet\\projet_haum\\src\\services\\meteo.js":"8","C:\\Users\\Andrianiaina\\Dossier_Projet\\projet_haum\\src\\components\\DialogMeteo.jsx":"9"},{"size":552,"mtime":1609777341161,"results":"10","hashOfConfig":"11"},{"size":5227,"mtime":1605703057321,"results":"12","hashOfConfig":"11"},{"size":1919,"mtime":1609767075859,"results":"13","hashOfConfig":"11"},{"size":2413,"mtime":1609777928032,"results":"14","hashOfConfig":"11"},{"size":4152,"mtime":1609774785339,"results":"15","hashOfConfig":"11"},{"size":1031,"mtime":1609691904904,"results":"16","hashOfConfig":"11"},{"size":436,"mtime":1609691904825,"results":"17","hashOfConfig":"11"},{"size":829,"mtime":1609771229355,"results":"18","hashOfConfig":"11"},{"size":2662,"mtime":1609774528184,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1e5jkfi",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"22"},"C:\\Users\\Andrianiaina\\Dossier_Projet\\projet_haum\\src\\index.jsx",[],["42","43"],"C:\\Users\\Andrianiaina\\Dossier_Projet\\projet_haum\\src\\serviceWorker.js",[],"C:\\Users\\Andrianiaina\\Dossier_Projet\\projet_haum\\src\\App.jsx",["44"],"import React, { useState } from \"react\";\r\nimport {css} from \"@emotion/css\";\r\nimport {motion} from \"framer-motion\";\r\nimport {Dialog} from \"./components/Dialog\";\r\n\r\nfunction App() {\r\n    const newDate = new Date();\r\n    const [datehour,setDateHour] = useState({\r\n        jour: newDate.getDate(),\r\n        mois: newDate.getMonth(),\r\n        année: newDate.getFullYear(),\r\n        heure: newDate.getHours(),\r\n        minutes: newDate.getMinutes(),\r\n        seconds: newDate.getSeconds(),\r\n    });\r\n    return (\r\n        <>\r\n            <div\r\n                className={css({\r\n                    flexDirection: \"row\",\r\n                    display: \"flex\",\r\n                    height: \"100vh\",\r\n                    justifyContent: \"space-between\",\r\n                    alignItems: \"center\",\r\n                })}\r\n            >\r\n                <div\r\n                    className={css({\r\n                        textAlign: \"right\",\r\n                        width: \"50%\",\r\n                    })}\r\n                >\r\n                    <motion.h3\r\n                        initial={{ opacity: 0, y: -80 }}\r\n                        animate={{ opacity: 1, y: 0 }}\r\n                        transition={{ duration: 0.5 }}\r\n                    >\r\n                        Je suis HAUM votre assistant!!\r\n                    </motion.h3>\r\n                    <p>\r\n                        {datehour.jour}/{datehour.mois}/{datehour.année}\r\n                    </p>\r\n                    <p>\r\n                        {datehour.heure}:{datehour.minutes}:{datehour.seconds}\r\n                    </p>\r\n                </div>\r\n                <div\r\n                    className={css({\r\n                        width: \"40%\",\r\n                        textAlign: \"left\",\r\n                    })}\r\n                >\r\n                    <Dialog />\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Andrianiaina\\Dossier_Projet\\projet_haum\\src\\DialogContext.js",["45"],"C:\\Users\\Andrianiaina\\Dossier_Projet\\projet_haum\\src\\components\\Dialog.jsx",["46","47"],"import React, { useContext,  useEffect,  useRef } from \"react\";\r\nimport { DialogContext } from \"../DialogContext\";\r\nimport { AnimatePresence, motion } from \"framer-motion\";\r\nimport { css } from \"@emotion/css\";\r\nimport DialogMeteo from \"./DialogMeteo\";\r\nimport SpeechRecognition, {\r\n    useSpeechRecognition,\r\n} from \"react-speech-recognition\";\r\n\r\nconst Msg = ({ children, user = true }) => {\r\n    return (\r\n        <motion.p\r\n            className={css({\r\n                width: \"600px\",\r\n                margin: \"10px 0\",\r\n                fontSize: 32,\r\n                paddingBottom: 10,\r\n                textAlign: user ? \"right\" : \"left\",\r\n            })}\r\n            initial={{ opacity: 0, y: \"80px\" }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            exit={{ opacity: 0, y: \"-80px\" }}\r\n            transition={{ duration: 0.5 }}\r\n        >\r\n            {children}\r\n        </motion.p>\r\n    );\r\n};\r\n\r\nexport const Dialog = () => {\r\n    const { dialogs, sendRequest, getMeteo,id, loading,replyUser } = useContext(DialogContext);\r\n    const inp = useRef(null);\r\n    const onClick = (e) => {\r\n        sendRequest(inp.current.value);\r\n        replyUser(\"hello\")\r\n        inp.current.value = null;\r\n    };\r\n    const commands = [\r\n        {\r\n            command: \"*\",\r\n            callback: (standard) => {\r\n                console.log('standard', standard);\r\n            }\r\n        },\r\n        {\r\n            command: \"Salut\",\r\n            callback: ({command}) => {\r\n                console.log('command', command)\r\n            },\r\n        },\r\n        {\r\n            command: \"Je voudrais savoir la météo * *\",\r\n            callback: (pronom,city,{command,finalTranscript}) => {\r\n                getMeteo(city);\r\n                console.log('command', command)\r\n            },\r\n        },\r\n    ];\r\n    if (!SpeechRecognition.browserSupportsSpeechRecognition())\r\n        console.log(\"browser is not supporting\");\r\n    const reco = useSpeechRecognition({\r\n        language: \"fr-FR\",\r\n        commands,\r\n    });\r\n    const { transcript, listening,finalTranscript } = reco;\r\n    useEffect(()=>{\r\n        const msg =finalTranscript;\r\n        console.log('finalTranscript', finalTranscript)\r\n        sendRequest(finalTranscript);\r\n    },[finalTranscript])\r\n    return (\r\n        <>\r\n            <AnimatePresence>\r\n                {dialogs.slice(id<4?0:id-3).map((value) => (\r\n                    <motion.p\r\n                        className={css({\r\n                            width: \"600px\",\r\n                            margin: \"10px 0\",\r\n                            fontSize: 32,\r\n                            paddingBottom: 10,\r\n                            textAlign: value.user ? \"right\" : \"left\",\r\n                        })}\r\n                        initial={{ opacity: 0, y: \"80px\" }}\r\n                        animate={{ opacity: 1, y: 0 }}\r\n                        exit={{ opacity: 0, y: \"-80px\" }}\r\n                        transition={{ duration: 0.5 }}\r\n                        key={value.id}\r\n                    >\r\n                        {value.msg}\r\n                    </motion.p>\r\n                ))}\r\n                {loading && <Msg key={\"im-searching\"} user={false}>Je cherche...</Msg>}\r\n                {listening && <Msg key={\"im-listening\"} user={false}>Je vous écoute</Msg>}\r\n                {listening && <Msg key={\"transcripting\"}>{transcript}</Msg>}\r\n            </AnimatePresence>\r\n            <div className={css({ margin: 10 })}>\r\n                <input\r\n                    type=\"text\"\r\n                    ref={inp}\r\n                    placeholder=\"Je voudrais savoir la météo.\"\r\n                />\r\n                <button onClick={onClick}>Envoyer</button>\r\n                <button\r\n                    onClick={() => {\r\n                        SpeechRecognition.startListening({ language: \"fr-FR\" });\r\n                    }}\r\n                >\r\n                    Ecouter\r\n                </button>\r\n                <button onClick={() => SpeechRecognition.stopListening()}>\r\n                    Arreter\r\n                </button>\r\n            </div>\r\n            <DialogMeteo />\r\n        </>\r\n    );\r\n};\r\n","C:\\Users\\Andrianiaina\\Dossier_Projet\\projet_haum\\src\\components\\ActionButton.jsx",[],"C:\\Users\\Andrianiaina\\Dossier_Projet\\projet_haum\\src\\components\\animation.js",[],"C:\\Users\\Andrianiaina\\Dossier_Projet\\projet_haum\\src\\services\\meteo.js",[],"C:\\Users\\Andrianiaina\\Dossier_Projet\\projet_haum\\src\\components\\DialogMeteo.jsx",["48"],"import React, { useContext, useRef } from \"react\";\r\nimport { DialogContext } from \"../DialogContext\";\r\nimport { AnimatePresence, motion } from \"framer-motion\";\r\nimport { css } from \"@emotion/css\";\r\nimport { ActionButton, ActionButtonList } from \"./ActionButton.jsx\";\r\n\r\nconst DialogMeteo = ({ children }) => {\r\n    const {\r\n        city,\r\n        getMeteo,\r\n        askForMeteo,\r\n        closeMeteo,\r\n        meteoDialog,\r\n        sendRequest,\r\n    } = useContext(DialogContext);\r\n\r\n    const sinp = useRef(null);\r\n\r\n    const searchForMeteo = () => {\r\n        const city = sinp.current.value;\r\n        getMeteo();\r\n        closeMeteo();\r\n    };\r\n    return (\r\n        <>\r\n            <ActionButtonList>\r\n                {!meteoDialog ? (\r\n                    <ActionButton onClick={askForMeteo}>\r\n                        Search for meteo\r\n                    </ActionButton>\r\n                ) : (\r\n                    <ActionButton onClick={closeMeteo}>\r\n                        Close meteo\r\n                    </ActionButton>\r\n                )}\r\n            </ActionButtonList>\r\n            <AnimatePresence>\r\n                <ActionButtonList>\r\n                    {meteoDialog &&\r\n                        city.map((value, index) => (\r\n                            <ActionButton\r\n                                key={\"meteo-city-\" + index}\r\n                                onClick={() => {\r\n                                    sendRequest(\r\n                                        `Je voudrais savoir la météo à ${value}`\r\n                                    );\r\n                                    getMeteo(value);\r\n                                }}\r\n                            >\r\n                                {value}\r\n                            </ActionButton>\r\n                        ))}\r\n                </ActionButtonList>\r\n                {meteoDialog && (\r\n                    <motion.div\r\n                        exit={{ opacity: 0, x: -30 }}\r\n                        initial={{ opacity: 0, x: 80 }}\r\n                        animate={{ opacity: 1, x: 0 }}\r\n                        key={\"input-city\"}\r\n                        className={css({ margin: 10 })}\r\n                    >\r\n                        <input\r\n                            type=\"text\"\r\n                            ref={sinp}\r\n                            placeholder=\"Ville (Nom d'origine ex:Antananrivo,London,Toamasina) \"\r\n                        />\r\n                        <button onClick={searchForMeteo}>Chercher</button>\r\n                    </motion.div>\r\n                )}\r\n            </AnimatePresence>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default DialogMeteo;\r\n",{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":8,"column":21,"nodeType":"55","messageId":"56","endLine":8,"endColumn":32},{"ruleId":"53","severity":1,"message":"57","line":2,"column":10,"nodeType":"55","messageId":"56","endLine":2,"endColumn":25},{"ruleId":"53","severity":1,"message":"58","line":67,"column":15,"nodeType":"55","messageId":"56","endLine":67,"endColumn":18},{"ruleId":"59","severity":1,"message":"60","line":70,"column":7,"nodeType":"61","endLine":70,"endColumn":24,"suggestions":"62"},{"ruleId":"53","severity":1,"message":"63","line":20,"column":15,"nodeType":"55","messageId":"56","endLine":20,"endColumn":19},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"no-unused-vars","'setDateHour' is assigned a value but never used.","Identifier","unusedVar","'getMeteoForCity' is defined but never used.","'msg' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'sendRequest'. Either include it or remove the dependency array.","ArrayExpression",["66"],"'city' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"67","fix":"68"},"Update the dependencies array to be: [finalTranscript, sendRequest]",{"range":"69","text":"70"},[2242,2259],"[finalTranscript, sendRequest]"]